name: CI
'on':
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
  push:
    branches:
      - main
      - release/*
jobs:
  build-test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - language: node
            node-version: 18
          - language: python
            python-version: 3.11
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node
        if: ${{ matrix.language == 'node' }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: pnpm
          cache-dependency-path: pnpm-lock.yaml
      - name: Setup Python
        if: ${{ matrix.language == 'python' }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Python dependencies
        if: ${{ matrix.language == 'python' }}
        working-directory: backend
        run: pip install -e ".[dev]"
      - name: Run Backend Tests
        if: ${{ matrix.language == 'python' }}
        working-directory: backend
        run: pytest -q
      - name: Install Node dependencies
        if: ${{ matrix.language == 'node' }}
        run: npm install -g pnpm
      - name: Install Frontend dependencies
        if: ${{ matrix.language == 'node' }}
        working-directory: frontend/apps/web
        run: pnpm install
      - name: Build Frontend
        if: ${{ matrix.language == 'node' }}
        working-directory: frontend/apps/web
        run: pnpm run build
  release:
    if: github.ref == 'refs/heads/main'
    needs: build-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          registry-url: https://registry.npmjs.org
      - run: npm ci
      - run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
