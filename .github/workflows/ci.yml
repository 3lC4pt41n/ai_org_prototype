name: CI

on:
  push:
    branches: [ main ]
  pull_request:

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  backend:
    name: Backend • Lint • Types • Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: pip-${{ runner.os }}-${{ hashFiles('backend/requirements.txt', 'backend/requirements-dev.txt') }}
          restore-keys: |
            pip-${{ runner.os }}-

      - name: Install dependencies
        run: |
          pip install -r backend/requirements.txt
          pip install -r backend/requirements-dev.txt

      - name: Pre-commit (lint/format/basic checks)
        run: |
          pre-commit run --all-files

      - name: Typecheck (mypy)
        run: |
          mypy backend/ai_org_backend

      - name: Run tests (pytest + coverage)
        env:
          PYTHONPATH: backend
        run: |
          pytest -q --maxfail=1 --disable-warnings \
                 --cov=ai_org_backend --cov-report=xml --cov-report=term-missing

      - name: Upload coverage.xml
        uses: actions/upload-artifact@v4
        with:
          name: coverage-xml
          path: coverage.xml

  frontend:
    name: Frontend • Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: frontend/package-lock.json

      - name: Install deps
        working-directory: frontend
        run: npm ci
        # Falls ihr pnpm/yarn nutzt: hier entsprechend anpassen.

      - name: Build
        working-directory: frontend
        run: npm run build
